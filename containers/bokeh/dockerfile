ARG BASE_IMAGE=ubuntu:22.04
FROM $BASE_IMAGE

LABEL maintainer="massimods@met.no"

ENV DEBIAN_FRONTEND=noninteractive

RUN apt-get update && apt-get -y dist-upgrade && apt-get install -y apt-utils git python3-dev python3.10-venv curl wget xz-utils 

#RUN apt-get update && apt-get install -y software-properties-common curl && curl -sL https://deb.nodesource.com/setup_14.x | bash -
#RUN apt-get update && apt-get install -y --no-install-recommends nodejs 

#ENV NODE_VERSION=16.14.2

#RUN wget https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz &&\
#    tar -xvf node-v${NODE_VERSION}-linux-x64.tar.xz

#ENV PATH=${PATH}:/node-v${NODE_VERSION}-linux-x64/bin

#RUN npm i -g corepack && corepack enable


RUN apt-get install -y libproj-dev libgeos-dev proj-bin proj-data python3-gdal python3-mapscript build-essential
# gdal-bin libgdal-dev build-essential

SHELL ["/bin/bash", "-c"] 

# RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash


# ENV NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] 
# RUN printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")" [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" 

# SHELL ["/bin/bash", "-c", "--login"]

RUN wget https://nodejs.org/dist/v14.17.0/node-v14.17.0-linux-x64.tar.xz && tar -C /usr/local --strip-components 1 -xJf node-v14.17.0-linux-x64.tar.xz

ENV VIRTUAL_ENV=/opt/venv
RUN python3 -m venv $VIRTUAL_ENV

ENV PATH="$VIRTUAL_ENV/bin:$PATH"

# Install dependencies:
COPY requirements.txt .
RUN pip install -U pip
RUN pip install -r requirements.txt

COPY entrypoint.sh /entrypoint.sh
RUN chmod +x /entrypoint.sh

EXPOSE 7000

ENV ORIGIN="0.0.0.0:7000" PORT="7000" PREFIX="" LOG_LEVEL="debug"

COPY ./app /app
ENTRYPOINT ["./entrypoint.sh"]

